global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'higgs-domino-monitor'
    environment: 'production'

rule_files:
  - "alert_rules.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Main Application
  - job_name: 'higgs-domino-app'
    static_configs:
      - targets: ['app:9090']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # PostgreSQL Database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres:5432']
    scrape_interval: 30s
    metrics_path: /metrics
    params:
      # Add postgres_exporter if needed

  # Redis Cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 30s
    metrics_path: /metrics
    params:
      # Add redis_exporter if needed

  # Nginx Load Balancer
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:8080']
    scrape_interval: 30s
    metrics_path: /nginx_status
    params:
      format: ['prometheus']

  # Node Exporter (System Metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics

  # cAdvisor (Container Metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics

  # Custom Game Metrics
  - job_name: 'game-metrics'
    static_configs:
      - targets: ['app:9090']
    scrape_interval: 10s
    metrics_path: /api/v1/metrics/game
    params:
      format: ['prometheus']

  # WebSocket Metrics
  - job_name: 'websocket-metrics'
    static_configs:
      - targets: ['app:9090']
    scrape_interval: 15s
    metrics_path: /api/v1/metrics/websocket
    params:
      format: ['prometheus']

  # Payment System Metrics
  - job_name: 'payment-metrics'
    static_configs:
      - targets: ['app:9090']
    scrape_interval: 30s
    metrics_path: /api/v1/metrics/payments
    params:
      format: ['prometheus']

  # Security Metrics
  - job_name: 'security-metrics'
    static_configs:
      - targets: ['app:9090']
    scrape_interval: 60s
    metrics_path: /api/v1/metrics/security
    params:
      format: ['prometheus']

  # Business Metrics
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['app:9090']
    scrape_interval: 300s # 5 minutes
    metrics_path: /api/v1/metrics/business
    params:
      format: ['prometheus']

  # Health Check Endpoints
  - job_name: 'health-checks'
    static_configs:
      - targets: 
        - 'app:3000'
        - 'postgres:5432'
        - 'redis:6379'
    scrape_interval: 30s
    metrics_path: /health
    params:
      format: ['prometheus']

# Remote write configuration (for long-term storage)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint.com/api/v1/write"
#     basic_auth:
#       username: "your-username"
#       password: "your-password"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# Remote read configuration
# remote_read:
#   - url: "https://prometheus-remote-read-endpoint.com/api/v1/read"
#     basic_auth:
#       username: "your-username"
#       password: "your-password"

# Storage configuration
storage:
  tsdb:
    retention.time: 15d
    retention.size: 10GB
    wal-compression: true

# Recording rules for aggregation
rule_files:
  - "recording_rules.yml"
  - "alert_rules.yml"