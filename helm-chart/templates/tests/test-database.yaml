apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "higgs-domino.fullname" . }}-test-database"
  labels:
    {{- include "higgs-domino.labels" . | nindent 4 }}
    app.kubernetes.io/component: test
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  {{- with .Values.app.imagePullSecrets }}
  imagePullSecrets:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  containers:
    - name: database-test
      image: postgres:15-alpine
      command:
        - /bin/sh
        - -c
        - |
          set -e
          
          echo "Testing database connectivity..."
          
          # Test PostgreSQL connection
          echo "Testing PostgreSQL connection..."
          pg_isready -h $DATABASE_HOST -p $DATABASE_PORT -U $DATABASE_USER
          echo "✓ PostgreSQL connection successful"
          
          # Test database access
          echo "Testing database access..."
          psql -h $DATABASE_HOST -p $DATABASE_PORT -U $DATABASE_USER -d $DATABASE_NAME -c "SELECT version();" > /dev/null
          echo "✓ Database access successful"
          
          # Test basic table existence (assuming users table exists after migration)
          echo "Testing table existence..."
          psql -h $DATABASE_HOST -p $DATABASE_PORT -U $DATABASE_USER -d $DATABASE_NAME -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_name = 'users';" | grep -q "1" || echo "Warning: users table not found (migrations may not have run)"
          
          echo "Database tests completed!"
      env:
        - name: DATABASE_HOST
          value: {{ include "higgs-domino.postgresql.host" . | quote }}
        - name: DATABASE_PORT
          value: {{ include "higgs-domino.postgresql.port" . | quote }}
        - name: DATABASE_NAME
          value: {{ include "higgs-domino.postgresql.database" . | quote }}
        - name: DATABASE_USER
          value: {{ include "higgs-domino.postgresql.username" . | quote }}
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "higgs-domino.secretName" . }}
              key: database-password
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
---
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "higgs-domino.fullname" . }}-test-redis"
  labels:
    {{- include "higgs-domino.labels" . | nindent 4 }}
    app.kubernetes.io/component: test
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  {{- with .Values.app.imagePullSecrets }}
  imagePullSecrets:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  containers:
    - name: redis-test
      image: redis:7-alpine
      command:
        - /bin/sh
        - -c
        - |
          set -e
          
          echo "Testing Redis connectivity..."
          
          # Test Redis connection
          {{- if or .Values.redis.auth.enabled .Values.externalRedis.password }}
          echo "Testing Redis connection with authentication..."
          redis-cli -h $REDIS_HOST -p $REDIS_PORT -a $REDIS_PASSWORD ping | grep -q "PONG"
          {{- else }}
          echo "Testing Redis connection without authentication..."
          redis-cli -h $REDIS_HOST -p $REDIS_PORT ping | grep -q "PONG"
          {{- end }}
          echo "✓ Redis connection successful"
          
          # Test basic Redis operations
          echo "Testing Redis operations..."
          {{- if or .Values.redis.auth.enabled .Values.externalRedis.password }}
          redis-cli -h $REDIS_HOST -p $REDIS_PORT -a $REDIS_PASSWORD set test_key "test_value"
          redis-cli -h $REDIS_HOST -p $REDIS_PORT -a $REDIS_PASSWORD get test_key | grep -q "test_value"
          redis-cli -h $REDIS_HOST -p $REDIS_PORT -a $REDIS_PASSWORD del test_key
          {{- else }}
          redis-cli -h $REDIS_HOST -p $REDIS_PORT set test_key "test_value"
          redis-cli -h $REDIS_HOST -p $REDIS_PORT get test_key | grep -q "test_value"
          redis-cli -h $REDIS_HOST -p $REDIS_PORT del test_key
          {{- end }}
          echo "✓ Redis operations successful"
          
          echo "Redis tests completed!"
      env:
        - name: REDIS_HOST
          value: {{ include "higgs-domino.redis.host" . | quote }}
        - name: REDIS_PORT
          value: {{ include "higgs-domino.redis.port" . | quote }}
        {{- if or .Values.redis.auth.enabled .Values.externalRedis.password }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "higgs-domino.secretName" . }}
              key: redis-password
        {{- end }}
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi